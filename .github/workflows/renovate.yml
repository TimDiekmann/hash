name: Update dependencies
on:
  workflow_dispatch:
    inputs:
      repoCache:
        description: "Reset or disable the cache?"
        type: choice
        default: enabled
        options:
          - enabled
          - disabled
          - reset
      logLevel:
        description: "Override default log level"
        type: choice
        default: info
        options:
          - "debug"
          - "info"
          - "warn"
          - "error"
      overrideSchedule:
        description: "Override all schedules"
        type: boolean
        default: false
      dryRun:
        description: "Dry run mode"
        type: choice
        default: disabled
        options:
          - disabled
          - extract
          - lookup
          - full
  schedule:
    #Run every 30 minutes
    - cron: "0/30 * * * *"

env:
  cache_archive: renovate_cache.tar.gz
  cache_dir: /tmp/renovate/cache/renovate/repository
  cache_key: renovate-cache
  dry_run: ${{ github.event.inputs.dryRun || 'disabled' }}
  repo_cache: ${{ github.event.inputs.repoCache || 'enabled' }}

concurrency:
  cancel-in-progress: false
  group: renovate

permissions:
  contents: write
  pull-requests: write

jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Get token
        id: app-token
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Install Rust toolchain
        uses: ./.github/actions/install-rust-toolchain

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 20

      #      - name: Change owner for cargo
      #        if: github.event.inputs.repoCache != 'disabled'
      #        run: sudo chown -R runneradmin:root /home/runner/.cargo/

      - uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
        if: env.repo_cache == 'enabled'
        continue-on-error: true
        with:
          name: ${{ env.cache_key }}
          path: cache-download

      - name: Extract renovate cache
        if: env.repo_cache == 'enabled'
        run: |
          if [ ! -d cache-download ] ; then
            echo "No cache found."
            exit 0
          fi

          mkdir -p $cache_dir
          tar -xzf cache-download/$cache_archive -C $cache_dir

      - name: Install renovate
        run: npm install -g renovate

      - name: Run renovate
        env:
          LOG_LEVEL: ${{ inputs.logLevel || 'info' }}
          RENOVATE_FORCE: ${{ github.event.inputs.overrideSchedule == 'true' && '{"schedule":null}' || '' }}
          RENOVATE_DRY_RUN: ${{ env.dry_run == 'disabled' && 'null' || inputs.dryRun }}
          RENOVATE_PLATFORM_COMMIT: enabled
          RENOVATE_REPOSITORIES: ${{ github.repository }}
          # TODO: Consider using S3 by setting `RENOVATE_REPOSITORY_CACHE_TYPE`
          RENOVATE_REPOSITORY_CACHE: ${{ env.repo_cache }}
          RENOVATE_ALLOWED_POST_UPGRADE_COMMANDS: '["^yarn fix$", "^cargo update .*"]'
        run: renovate --token ${{ steps.app-token.outputs.token }}

      #      - name: Run renovate
      #        uses: renovatebot/github-action@630a255a1f2f56c8d8ce160bed3e3ca577ca53e2 # v40.2.7
      #        with:
      #          token: ${{ steps.app-token.outputs.token }}
      #          configurationFile: .github/renovate.json
      #          #          docker-cmd-file: .github/renovate-entrypoint.sh
      #          #          docker-user: root
      #          docker-volumes: |
      #            /tmp:/tmp ;
      #            /home/runner/.cargo:/home/ubuntu/.cargo ;
      #        env:
      #          LOG_LEVEL: ${{ inputs.logLevel || 'info' }}
      #          RENOVATE_FORCE: ${{ github.event.inputs.overrideSchedule == 'true' && '{"schedule":null}' || '' }}
      #          RENOVATE_DRY_RUN: ${{ env.dry_run == 'disabled' && 'null' || inputs.dryRun }}
      #          RENOVATE_PLATFORM_COMMIT: enabled
      #          RENOVATE_REPOSITORIES: ${{ github.repository }}
      #          # TODO: Consider using S3 by setting `RENOVATE_REPOSITORY_CACHE_TYPE`
      #          RENOVATE_REPOSITORY_CACHE: ${{ github.event.inputs.repoCache || 'enabled' }}
      #          RENOVATE_ALLOWED_ENV: '["PATH"]'
      #          RENOVATE_ENV: '{"PATH":"/home/ubuntu/.cargo/bin:/home/ubuntu/.local/bin:/home/ubuntu/bin:/home/ubuntu/.local/bin:/home/ubuntu/bin:/home/ubuntu/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"}'

      - name: Compress renovate cache
        run: tar -czvf $cache_archive -C $cache_dir .

      - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4
        if: env.dry_run == 'disabled' && github.event.inputs.repoCache != 'disabled'
        with:
          name: ${{ env.cache_key }}
          path: ${{ env.cache_archive }}
          retention-days: 1
